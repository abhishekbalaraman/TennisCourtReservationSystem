/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiCourtReservation;

import domainCourtReservation.jCourt;
import domainCourtReservation.jTimetable;
import domainCourtReservation.enumErrorCode;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Paulo Garcez Vieira
 */
public class winTimetable extends javax.swing.JInternalFrame {

    private Date dateStart, dateEnd;

        
    /**
     * Creates new form winTimetable
     */
    public winTimetable() {
        initComponents();
        this.dateStart = null;
        this.dateEnd = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCourtID = new javax.swing.JLabel();
        cmbCourtID = new javax.swing.JComboBox<>();
        pnlHours = new javax.swing.JPanel();
        lblFromDate = new javax.swing.JLabel();
        lblToDate = new javax.swing.JLabel();
        jXDatePickerFrom = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickerTo = new org.jdesktop.swingx.JXDatePicker();
        lblBetweenHour = new javax.swing.JLabel();
        lblToHour = new javax.swing.JLabel();
        spnBetweenHour = new javax.swing.JSpinner();
        spnToHour = new javax.swing.JSpinner();
        lblWeekend = new javax.swing.JLabel();
        chkWeekend = new javax.swing.JCheckBox();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setClosable(true);

        lblCourtID.setText("Court ID");

        cmbCourtID.setModel(new DefaultComboBoxModel(jCourt.getCourtsID()));
        /*cmbCourtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCourtIDActionPerformed(evt);
            }
        });*/

        pnlHours.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Court Available", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblFromDate.setText("From");

        lblToDate.setText("To");

        jXDatePickerFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePickerFromActionPerformed(evt);
            }
        });

        /*jXDatePickerTo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jXDatePickerToInputMethodTextChanged(evt);
            }
        });*/
        jXDatePickerTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePickerToActionPerformed(evt);
            }
        });

        lblBetweenHour.setText("Between");

        lblToHour.setText("To");

        spnBetweenHour.setModel(new javax.swing.SpinnerListModel(new String[] {"00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00"}));

        spnToHour.setModel(new javax.swing.SpinnerListModel(new String[] {"01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00"}));

        javax.swing.GroupLayout pnlHoursLayout = new javax.swing.GroupLayout(pnlHours);
        pnlHours.setLayout(pnlHoursLayout);
        pnlHoursLayout.setHorizontalGroup(
            pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoursLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFromDate)
                    .addComponent(lblToDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jXDatePickerFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jXDatePickerTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlHoursLayout.createSequentialGroup()
                        .addComponent(lblBetweenHour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnBetweenHour, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHoursLayout.createSequentialGroup()
                        .addComponent(lblToHour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spnToHour, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHoursLayout.setVerticalGroup(
            pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoursLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFromDate)
                    .addComponent(jXDatePickerFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBetweenHour)
                    .addComponent(spnBetweenHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(pnlHoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblToDate)
                    .addComponent(jXDatePickerTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblToHour)
                    .addComponent(spnToHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        lblWeekend.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWeekend.setText("Open at Weekends");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCourtID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbCourtID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(286, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlHours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWeekend, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(chkWeekend)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourtID)
                    .addComponent(cmbCourtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnlHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblWeekend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkWeekend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancel)
                    .addComponent(btnClear))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String strFrom = (String) this.spnBetweenHour.getValue();
        String strTo = (String) this.spnToHour.getValue();
        int intCourt = 0;
        
        try {
            String str = (String) this.cmbCourtID.getSelectedItem();
            intCourt = Integer.valueOf(str);
            } catch (NumberFormatException e) { 
                JOptionPane.showMessageDialog(this,"Invalid Court ID! " + e);
                return; 
            }
		
	jTimetable temp = new jTimetable(intCourt, this.dateStart, this.dateEnd, strFrom, strTo, this.chkWeekend.isSelected());
        enumErrorCode errCode = jTimetable.addTimetable(temp);		
        if(errCode == enumErrorCode.DATE_INVERSION){
            JOptionPane.showMessageDialog(this,"End date before start date!");
            this.jXDatePickerFrom.setDate(null);
            this.jXDatePickerTo.setDate(null);
            return;
        } 
	if(errCode == enumErrorCode.HOUR_INVERSION){
            JOptionPane.showMessageDialog(this,"End hour before start hour!");
            return;
        }  
        if(errCode == enumErrorCode.DATE_OVERLAP){
            JOptionPane.showMessageDialog(this,"Dates overlap previous Timetable!");
            return;
        }
	if (errCode == enumErrorCode.OK) {
            JOptionPane.showMessageDialog(this,"Timetable added with success!");
            this.jXDatePickerFrom.setDate(null);
            this.jXDatePickerTo.setDate(null);
            this.dateStart = null;
            this.dateEnd = null;
        } else JOptionPane.showMessageDialog(this,"Timetable details error!");    
    }//GEN-LAST:event_btnAddActionPerformed

    private void jXDatePickerToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerToActionPerformed
        try {
            this.dateEnd = this.jXDatePickerTo.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String strtoDate = sdf.format(this.dateEnd);
            this.jXDatePickerTo.setFormats(new SimpleDateFormat("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error entering date! " + e);}
    }//GEN-LAST:event_jXDatePickerToActionPerformed

    private void jXDatePickerFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerFromActionPerformed
        try {
            this.dateStart = this.jXDatePickerFrom.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String strfromDate = sdf.format(this.dateStart);
            this.jXDatePickerFrom.setFormats(new SimpleDateFormat("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error entering date! " + e);}
    }//GEN-LAST:event_jXDatePickerFromActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        this.jXDatePickerFrom.setDate(null);
        this.jXDatePickerTo.setDate(null);
        this.dateStart = null;
        this.dateEnd = null;
        this.chkWeekend.setSelected(false);
        this.spnBetweenHour.setValue("00:00");
        this.spnToHour.setValue("01:00");
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JCheckBox chkWeekend;
    private javax.swing.JComboBox<String> cmbCourtID;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerFrom;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerTo;
    private javax.swing.JLabel lblBetweenHour;
    private javax.swing.JLabel lblCourtID;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JLabel lblToHour;
    private javax.swing.JLabel lblWeekend;
    private javax.swing.JPanel pnlHours;
    private javax.swing.JSpinner spnBetweenHour;
    private javax.swing.JSpinner spnToHour;
    // End of variables declaration//GEN-END:variables
}
